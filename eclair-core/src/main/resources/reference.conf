eclair {

  chain = "mainnet" // "regtest" for regtest, "testnet" for testnet, "mainnet" for mainnet

  server {
    public-ips = [] // external ips, will be announced on the network
    binding-ip = "0.0.0.0"
    port = 9735
  }

  api {
    enabled = false // disabled by default for security reasons
    binding-ip = "127.0.0.1"
    port = 8080
    password = "" // password for basic auth, must be non empty if json-rpc api is enabled
  }

  // override this with a script/exe that will be called everytime a new database backup has been created
  # backup-notify-script = "/absolute/path/to/script.sh"

  watcher-type = "bitcoind" // other *experimental* values include "electrum"

  bitcoind {
    host = "localhost"
    rpcport = 8332
    rpcuser = "foo"
    rpcpassword = "bar"
    zmqblock = "tcp://127.0.0.1:29000"
    zmqtx = "tcp://127.0.0.1:29000"
  }

  default-feerates { // those are in satoshis per kilobyte
    delay-blocks {
      1 = 210000
      2 = 180000
      6 = 150000
      12 = 110000
      36 = 50000
      72 = 20000
    }
  }
  min-feerate = 3 // minimum feerate in satoshis per byte
  smooth-feerate-window = 6 // 1 = no smoothing

  node-alias = "eclair"
  node-color = "49daaa"

  global-features = ""
  local-features = "8a" // initial_routing_sync + option_data_loss_protect + option_channel_range_queries
  override-features = [ // optional per-node features
  #  {
  #    nodeid = "02aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa",
  #    global-features = "",
  #    local-features = ""
  #  }
  ]
  channel-flags = 1 // announce channels

  dust-limit-satoshis = 546
  max-htlc-value-in-flight-msat = 5000000000 // 50 mBTC
  htlc-minimum-msat = 1
  max-accepted-htlcs = 30

  reserve-to-funding-ratio = 0.01 // recommended by BOLT #2
  max-reserve-to-funding-ratio = 0.05 // channel reserve can't be more than 5% of the funding amount (recommended: 1%)

  to-remote-delay-blocks = 720 // number of blocks that the other node's to-self outputs must be delayed (720 ~ 5 days)
  max-to-local-delay-blocks = 2016 // maximum number of blocks that we are ready to accept for our own delayed outputs (2016 ~ 2 weeks)
  mindepth-blocks = 3
  expiry-delta-blocks = 144

  fee-base-msat = 1000
  fee-proportional-millionths = 100 // fee charged per transferred satoshi in millionths of a satoshi (100 = 0.01%)

  // maximum local vs remote feerate mismatch; 1.0 means 100%
  // actual check is abs((local feerate - remote fee rate) / (local fee rate + remote fee rate)/2) > fee rate mismatch
  max-feerate-mismatch = 1.56 // will allow remote fee rates up to 8x bigger or smaller than our local fee rate

  // funder will send an UpdateFee message if the difference between current commitment fee and actual current network fee is greater
  // than this ratio.
  update-fee_min-diff-ratio = 0.1

  revocation-timeout = 20 seconds // after sending a commit_sig, we will wait for at most that duration before disconnecting

  ping-interval = 30 seconds
  ping-timeout = 10 seconds // will disconnect if peer takes longer than that to respond
  ping-disconnect = true // disconnect if no answer to our pings
  auto-reconnect = true

  payment-handler = "local"
  payment-request-expiry = 1 hour // default expiry for payment requests generated by this node
  min-funding-satoshis = 100000
  max-payment-attempts = 5

  autoprobe-count = 0 // number of parallel tasks that send test payments to detect invalid channels

  router {
    randomize-route-selection = true // when computing a route for a payment we randomize the final selection
    channel-exclude-duration = 60 seconds // when a temporary channel failure is returned, we exclude the channel from our payment routes for this duration
    broadcast-interval = 60 seconds // see BOLT #7
    init-timeout = 5 minutes

    // the values below will be used to perform route searching
    path-finding {
      max-route-length = 6         // max route length for the 'first pass', if none is found then a second pass is made with no limit
      max-cltv =  1008             // max acceptable cltv expiry for the payment (1008 ~ 1 week)
      fee-threshold-sat = 21       // if fee is below this value we skip the max-fee-pct check
      max-fee-pct = 0.03           // route will be discarded if fee is above this value (in percentage relative to the total payment amount); doesn't apply if fee < fee-threshold-sat

      // channel 'weight' is computed with the following formula: channelFee * (cltvDelta * ratio-cltv + channelAge * ratio-channel-age + channelCapacity * ratio-channel-capacity)
      // the following parameters can be used to ask the router to use heuristics to find i.e: 'cltv-optimized' routes, **the sum of the three ratios must be > 0 and <= 1**
      heuristics-enable = true     // if true uses heuristics for path-finding
      ratio-cltv = 0.15            // when computing the weight for a channel, consider its CLTV delta in this proportion
      ratio-channel-age = 0.35     // when computing the weight for a channel, consider its AGE in this proportion
      ratio-channel-capacity = 0.5 // when computing the weight for a channel, consider its CAPACITY in this proportion
    }
  }

  socks5 {
    enabled = false
    host = "127.0.0.1"
    port = 9050
    use-for-ipv4 = true
    use-for-ipv6 = true
    use-for-tor = true
    randomize-credentials = false // this allows tor stream isolation
  }

  tor {
    enabled = false
    protocol = "v3" // v2, v3
    auth = "password" // safecookie, password
    password = "foobar" // used when auth=password
    host = "127.0.0.1"
    port = 9051
    private-key-file = "tor.dat"
  }
}

// do not edit or move this section
eclair {
  backup-mailbox {
    mailbox-type = "akka.dispatch.BoundedMailbox"
    mailbox-capacity = 1
    mailbox-push-timeout-time = 0
  }
  backup-dispatcher {
    executor = "thread-pool-executor"
    type = PinnedDispatcher
  }
}
