akka {

  loggers = ["akka.event.slf4j.Slf4jLogger"]
  logger-startup-timeout = 30s
  loglevel = "INFO"

  io {
    tcp {

      # The maximum number of bytes delivered by a `Received` message. Before
      # more data is read from the network the connection actor will try to
      # do other work.
      # The purpose of this setting is to impose a smaller limit than the
      # configured receive buffer size. When using value 'unlimited' it will
      # try to read all from the receive buffer.
      # As per BOLT#8 lightning messages are at most 2 + 16 + 65535 + 16 = 65569bytes
      # Currently the largest message is update_add_htlc (~1500b).
      # As a tradeoff to reduce the RAM consumption, in conjunction with tcp pull mode,
      # the default value is chosen to allow for a decent number of messages to be prefetched.
      max-received-message-size = 16384b

    }
  }

  # Default maximum content length which should not be exceeded by incoming request entities.
  # Can be changed at runtime (to a higher or lower value) via the `HttpEntity::withSizeLimit` method.
  # Note that it is not necessarily a problem to set this to a high value as all stream operations
  # are always properly backpressured.
  # Nevertheless you might want to apply some limit in order to prevent a single client from consuming
  # an excessive amount of server resources.
  #
  # Set to `infinite` to completely disable entity length checks. (Even then you can still apply one
  # programmatically via `withSizeLimit`.)
  #
  # We disable the size check, because the batching bitcoin json-rpc client may return very large results
  http.client.parsing.max-content-length=infinite
}