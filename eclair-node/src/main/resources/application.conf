eclair {
    enable-kamon = false
}

kamon.instrumentation.akka {
  filters {
    actors {
      # Decides which actors generate Spans for the messages they process, given that there is already an ongoing trace
      # in the Context of the processed message (i.e. there is a Sampled Span in the Context).
      #
      trace {
        includes = [ ]
        excludes = [ "**" ] # we don't want automatically generated spans because they conflict with the ones we define
      }
    }
  }
}

akka {
  loggers = ["akka.event.slf4j.Slf4jLogger"]
  logger-startup-timeout = 30s
  loglevel = "DEBUG" # akka doc: You can enable DEBUG level for akka.loglevel and control the actual level in the SLF4J backend without any significant overhead, also for production.
  logging-filter = "akka.event.slf4j.Slf4jLoggingFilter"
}

eclair {
  chain = "testnet"

  // clear upstream features
  features : null
  features {
    option_data_loss_protect = mandatory
    var_onion_optin = optional
    payment_secret = optional
    basic_mpp = optional
    option_support_large_channel = optional
  }

  max-funding-satoshis = 2100000000000000 // 21e6 btc

  trampoline-payments-enable = true

  max-htlc-value-in-flight-msat = 20000000000 // 200 mBTC

  min-feerate = 3
  feerate-provider-timeout = 15 seconds

  on-chain-fees {
    feerate-tolerance {
      ratio-low = 0.01
      ratio-high = 100.0
    }
  }

  max-reconnect-interval = 7 seconds // max interval between two reconnection attempts, after the exponential backoff period. Should be short on a mobile phone!!
}